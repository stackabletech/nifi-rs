/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ConnectionDiagnosticsSnapshotDto {
    /// Total number of FlowFiles owned by the Connection
    #[serde(rename = "totalFlowFileCount", skip_serializing_if = "Option::is_none")]
    pub total_flow_file_count: Option<i32>,
    /// Total number of bytes that make up the content for the FlowFiles owned by this Connection
    #[serde(rename = "totalByteCount", skip_serializing_if = "Option::is_none")]
    pub total_byte_count: Option<i64>,
    /// The Node Identifier that this information pertains to
    #[serde(rename = "nodeIdentifier", skip_serializing_if = "Option::is_none")]
    pub node_identifier: Option<String>,
    #[serde(rename = "localQueuePartition", skip_serializing_if = "Option::is_none")]
    pub local_queue_partition: Option<Box<crate::models::LocalQueuePartitionDto>>,
    #[serde(rename = "remoteQueuePartitions", skip_serializing_if = "Option::is_none")]
    pub remote_queue_partitions: Option<Vec<crate::models::RemoteQueuePartitionDto>>,
}

impl ConnectionDiagnosticsSnapshotDto {
    pub fn new() -> ConnectionDiagnosticsSnapshotDto {
        ConnectionDiagnosticsSnapshotDto {
            total_flow_file_count: None,
            total_byte_count: None,
            node_identifier: None,
            local_queue_partition: None,
            remote_queue_partitions: None,
        }
    }
}



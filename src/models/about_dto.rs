/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AboutDto {
    /// The title to be used on the page and in the about dialog.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The version of this NiFi.
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// The URI for the NiFi.
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
    /// The URL for the content viewer if configured.
    #[serde(rename = "contentViewerUrl", skip_serializing_if = "Option::is_none")]
    pub content_viewer_url: Option<String>,
    /// The timezone of the NiFi instance.
    #[serde(rename = "timezone", skip_serializing_if = "Option::is_none")]
    pub timezone: Option<String>,
    /// Build tag
    #[serde(rename = "buildTag", skip_serializing_if = "Option::is_none")]
    pub build_tag: Option<String>,
    /// Build revision or commit hash
    #[serde(rename = "buildRevision", skip_serializing_if = "Option::is_none")]
    pub build_revision: Option<String>,
    /// Build branch
    #[serde(rename = "buildBranch", skip_serializing_if = "Option::is_none")]
    pub build_branch: Option<String>,
    /// Build timestamp
    #[serde(rename = "buildTimestamp", skip_serializing_if = "Option::is_none")]
    pub build_timestamp: Option<String>,
}

impl AboutDto {
    pub fn new() -> AboutDto {
        AboutDto {
            title: None,
            version: None,
            uri: None,
            content_viewer_url: None,
            timezone: None,
            build_tag: None,
            build_revision: None,
            build_branch: None,
            build_timestamp: None,
        }
    }
}



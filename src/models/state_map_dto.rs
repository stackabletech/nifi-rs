/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StateMapDto {
    /// The scope of this StateMap.
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    /// The total number of state entries. When the state map is lengthy, only of portion of the entries are returned.
    #[serde(rename = "totalEntryCount", skip_serializing_if = "Option::is_none")]
    pub total_entry_count: Option<i32>,
    /// The state.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<Vec<crate::models::StateEntryDto>>,
}

impl StateMapDto {
    pub fn new() -> StateMapDto {
        StateMapDto {
            scope: None,
            total_entry_count: None,
            state: None,
        }
    }
}



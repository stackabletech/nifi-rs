/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ClusterSummaryDto {
    /// When clustered, reports the number of nodes connected vs the number of nodes in the cluster.
    #[serde(rename = "connectedNodes", skip_serializing_if = "Option::is_none")]
    pub connected_nodes: Option<String>,
    /// The number of nodes that are currently connected to the cluster
    #[serde(rename = "connectedNodeCount", skip_serializing_if = "Option::is_none")]
    pub connected_node_count: Option<i32>,
    /// The number of nodes in the cluster, regardless of whether or not they are connected
    #[serde(rename = "totalNodeCount", skip_serializing_if = "Option::is_none")]
    pub total_node_count: Option<i32>,
    /// Whether this NiFi instance is clustered.
    #[serde(rename = "clustered", skip_serializing_if = "Option::is_none")]
    pub clustered: Option<bool>,
    /// Whether this NiFi instance is connected to a cluster.
    #[serde(rename = "connectedToCluster", skip_serializing_if = "Option::is_none")]
    pub connected_to_cluster: Option<bool>,
}

impl ClusterSummaryDto {
    pub fn new() -> ClusterSummaryDto {
        ClusterSummaryDto {
            connected_nodes: None,
            connected_node_count: None,
            total_node_count: None,
            clustered: None,
            connected_to_cluster: None,
        }
    }
}



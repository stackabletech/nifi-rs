/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DropRequestDto {
    /// The id for this drop request.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The URI for future requests to this drop request.
    #[serde(rename = "uri", skip_serializing_if = "Option::is_none")]
    pub uri: Option<String>,
    /// The timestamp when the query was submitted.
    #[serde(rename = "submissionTime", skip_serializing_if = "Option::is_none")]
    pub submission_time: Option<String>,
    /// The last time this drop request was updated.
    #[serde(rename = "lastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    /// The current percent complete.
    #[serde(rename = "percentCompleted", skip_serializing_if = "Option::is_none")]
    pub percent_completed: Option<i32>,
    /// Whether the query has finished.
    #[serde(rename = "finished", skip_serializing_if = "Option::is_none")]
    pub finished: Option<bool>,
    /// The reason, if any, that this drop request failed.
    #[serde(rename = "failureReason", skip_serializing_if = "Option::is_none")]
    pub failure_reason: Option<String>,
    /// The number of flow files currently queued.
    #[serde(rename = "currentCount", skip_serializing_if = "Option::is_none")]
    pub current_count: Option<i32>,
    /// The size of flow files currently queued in bytes.
    #[serde(rename = "currentSize", skip_serializing_if = "Option::is_none")]
    pub current_size: Option<i64>,
    /// The count and size of flow files currently queued.
    #[serde(rename = "current", skip_serializing_if = "Option::is_none")]
    pub current: Option<String>,
    /// The number of flow files to be dropped as a result of this request.
    #[serde(rename = "originalCount", skip_serializing_if = "Option::is_none")]
    pub original_count: Option<i32>,
    /// The size of flow files to be dropped as a result of this request in bytes.
    #[serde(rename = "originalSize", skip_serializing_if = "Option::is_none")]
    pub original_size: Option<i64>,
    /// The count and size of flow files to be dropped as a result of this request.
    #[serde(rename = "original", skip_serializing_if = "Option::is_none")]
    pub original: Option<String>,
    /// The number of flow files that have been dropped thus far.
    #[serde(rename = "droppedCount", skip_serializing_if = "Option::is_none")]
    pub dropped_count: Option<i32>,
    /// The size of flow files that have been dropped thus far in bytes.
    #[serde(rename = "droppedSize", skip_serializing_if = "Option::is_none")]
    pub dropped_size: Option<i64>,
    /// The count and size of flow files that have been dropped thus far.
    #[serde(rename = "dropped", skip_serializing_if = "Option::is_none")]
    pub dropped: Option<String>,
    /// The current state of the drop request.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
}

impl DropRequestDto {
    pub fn new() -> DropRequestDto {
        DropRequestDto {
            id: None,
            uri: None,
            submission_time: None,
            last_updated: None,
            percent_completed: None,
            finished: None,
            failure_reason: None,
            current_count: None,
            current_size: None,
            current: None,
            original_count: None,
            original_size: None,
            original: None,
            dropped_count: None,
            dropped_size: None,
            dropped: None,
            state: None,
        }
    }
}



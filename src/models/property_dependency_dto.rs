/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PropertyDependencyDto {
    /// The name of the property that is being depended upon
    #[serde(rename = "propertyName", skip_serializing_if = "Option::is_none")]
    pub property_name: Option<String>,
    /// The values for the property that satisfies the dependency, or null if the dependency is satisfied by the presence of any value for the associated property name
    #[serde(rename = "dependentValues", skip_serializing_if = "Option::is_none")]
    pub dependent_values: Option<Vec<String>>,
}

impl PropertyDependencyDto {
    pub fn new() -> PropertyDependencyDto {
        PropertyDependencyDto {
            property_name: None,
            dependent_values: None,
        }
    }
}



/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GcDiagnosticsSnapshotDto {
    /// The timestamp of when the Snapshot was taken
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<String>,
    /// The number of times that Garbage Collection has occurred
    #[serde(rename = "collectionCount", skip_serializing_if = "Option::is_none")]
    pub collection_count: Option<i64>,
    /// The number of milliseconds that the Garbage Collector spent performing Garbage Collection duties
    #[serde(rename = "collectionMillis", skip_serializing_if = "Option::is_none")]
    pub collection_millis: Option<i64>,
}

impl GcDiagnosticsSnapshotDto {
    pub fn new() -> GcDiagnosticsSnapshotDto {
        GcDiagnosticsSnapshotDto {
            timestamp: None,
            collection_count: None,
            collection_millis: None,
        }
    }
}



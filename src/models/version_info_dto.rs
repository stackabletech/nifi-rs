/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct VersionInfoDto {
    /// The version of this NiFi.
    #[serde(rename = "niFiVersion", skip_serializing_if = "Option::is_none")]
    pub ni_fi_version: Option<String>,
    /// Java JVM vendor
    #[serde(rename = "javaVendor", skip_serializing_if = "Option::is_none")]
    pub java_vendor: Option<String>,
    /// Java version
    #[serde(rename = "javaVersion", skip_serializing_if = "Option::is_none")]
    pub java_version: Option<String>,
    /// Host operating system name
    #[serde(rename = "osName", skip_serializing_if = "Option::is_none")]
    pub os_name: Option<String>,
    /// Host operating system version
    #[serde(rename = "osVersion", skip_serializing_if = "Option::is_none")]
    pub os_version: Option<String>,
    /// Host operating system architecture
    #[serde(rename = "osArchitecture", skip_serializing_if = "Option::is_none")]
    pub os_architecture: Option<String>,
    /// Build tag
    #[serde(rename = "buildTag", skip_serializing_if = "Option::is_none")]
    pub build_tag: Option<String>,
    /// Build revision or commit hash
    #[serde(rename = "buildRevision", skip_serializing_if = "Option::is_none")]
    pub build_revision: Option<String>,
    /// Build branch
    #[serde(rename = "buildBranch", skip_serializing_if = "Option::is_none")]
    pub build_branch: Option<String>,
    /// Build timestamp
    #[serde(rename = "buildTimestamp", skip_serializing_if = "Option::is_none")]
    pub build_timestamp: Option<String>,
}

impl VersionInfoDto {
    pub fn new() -> VersionInfoDto {
        VersionInfoDto {
            ni_fi_version: None,
            java_vendor: None,
            java_version: None,
            os_name: None,
            os_version: None,
            os_architecture: None,
            build_tag: None,
            build_revision: None,
            build_branch: None,
            build_timestamp: None,
        }
    }
}



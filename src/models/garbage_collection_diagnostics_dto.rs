/*
 * NiFi Rest API
 *
 * The Rest API provides programmatic access to command and control a NiFi instance in real time. Start and                                             stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * The version of the OpenAPI document: 1.16.0
 * Contact: dev@nifi.apache.org
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GarbageCollectionDiagnosticsDto {
    /// The name of the Memory Manager that this Garbage Collection information pertains to
    #[serde(rename = "memoryManagerName", skip_serializing_if = "Option::is_none")]
    pub memory_manager_name: Option<String>,
    /// A list of snapshots that have been taken to determine the health of the JVM's heap
    #[serde(rename = "snapshots", skip_serializing_if = "Option::is_none")]
    pub snapshots: Option<Vec<crate::models::GcDiagnosticsSnapshotDto>>,
}

impl GarbageCollectionDiagnosticsDto {
    pub fn new() -> GarbageCollectionDiagnosticsDto {
        GarbageCollectionDiagnosticsDto {
            memory_manager_name: None,
            snapshots: None,
        }
    }
}


